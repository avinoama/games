<?php

/**
 * @file
 * Install, update and uninstall functions for the dbtng_example module.
 */

/**
 * Implements hook_install().
 *
 * In Drupal 7, there is no need to install schema using this hook, the schema
 * is already installed before this hook is called.
 *
 * We will create a default entry in the database.
 *
 * @see hook_install()
 * @ingroup dbtng_example
 */
function game_install() {
  // Outside of the .install file we would use drupal_write_record() to
  // populate the database, but it cannot be used here, so we'll use
  // db_insert().
}

/**
 * Implements hook_uninstall().
 *
 * As in hook_install, there is no need to uninstall schema, Drupal will do it
 * for us.
 *
 * @see hook_uninstall()
 * @ingroup dbtng_example
 */
function game_uninstall() {
  // nothing.
  //drupal_uninstall_schema('gaming_platform');
}

/**
 * Implements hook_schema().
 *
 * Defines the database tables used by this module.
 * Remember that the easiest way to create the code for hook_schema is with
 * the @link http://drupal.org/project/schema schema module @endlink
 *
 * @see hook_schema()
 * @ingroup dbtng_example
 */
function game_schema() {
  $schema = array();

  $schema['game'] = array(
      'description' => 'Store base information for a game.',
      'fields' => array(
          'gid' => array(
              'type' => 'serial',
              'not null' => TRUE,
              'description' => 'Primary Key: Game ID.',
          ),
          'type' => array(
              'description' => 'The type (bundle) of this game.',
              'type' => 'varchar',
              'length' => 255,
              'not null' => TRUE,
              'default' => '',
          ),
          'title' => array(
              'description' => 'The name of the game.',
              'type' => 'varchar',
              'length' => 255,
              'not null' => TRUE,
              'default' => '',
          ),
          'machine_name' => array(
              'description' => 'The machine readable name of game.',
              'type' => 'varchar',
              'length' => 255,
              'not null' => TRUE,
              'default' => '',
          ),
          'uid' => array(
              'description' => 'ID of Drupal user creator.',
              'type' => 'int',
              'not null' => TRUE,
          ),
          'created' => array(
              'description' => 'The Unix timestamp when the game was created.',
              'type' => 'date',
              'mysql_type' => 'DATETIME',
              'pgsql_type' => 'timestamp without time zone',
              'sqlite_type' => 'VARCHAR',
              'sqlsrv_type' => 'smalldatetime',
              'not null' => TRUE,
          ), /*
            'created' => array(
            'description' => 'The Unix timestamp when the game was created.',
            'type' => 'int',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'default' => 0,
            ), */
          'changed' => array(
              'description' => 'The Unix timestamp when the game was most recently saved.',
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
          ),
          'description' => array(
              'description' => 'game description.',
              'type' => 'text',
          ),
      ),
      'primary key' => array('gid'),
      'indexes' => array(
          'name' => array('title'),
      ),
      'unique keys' => array(
          'machine_name' => array('machine_name')
      ),
  );

  $schema['game_type'] = array(
      'description' => 'Stores information about all defined game types.',
      'fields' => array(
  'id' => array(
      'type' => 'serial',
      'not null' => TRUE,
      'description' => 'Primary Key: Unique game type ID.',
  ),
  'type' => array(
      'description' => 'The machine-readable name of this type.',
      'type' => 'varchar',
      'length' => 32,
      'not null' => TRUE,
  ),
  'label' => array(
      'description' => 'The human-readable name of this type.',
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'default' => '',
  ),
  'description' => array(
      'description' => 'A brief description of this type.',
      'type' => 'text',
      'not null' => TRUE,
      'size' => 'medium',
      'translatable' => TRUE,
  ),
      ) + entity_exportable_schema_fields(),
      'primary key' => array('id'),
      'unique keys' => array(
          'type' => array('type'),
      ),
  );

  $schema['running_game'] = array(
      'description' => 'the base table for state machine that will help save live instance of game.',
      'fields' => array(
  'id' => array(
      'type' => 'serial',
      'not null' => TRUE,
      'description' => 'Primary Key: Unique game instance ID.',
  ),
  'type' => array(
      'description' => 'The type (bundle) of this game.',
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'default' => '',
  ),
  'gid' => array(
      'description' => 'ID of game.',
      'type' => 'int',
      'not null' => TRUE,
  ),
  'uid' => array(
      'description' => 'ID of Drupal user creator.',
      'type' => 'int',
      'not null' => TRUE,
  ),
  'session' => array(
      'description' => 'The machine-readable name of this game instance.',
      'type' => 'varchar',
      'length' => 32,
      'not null' => TRUE,
  ),
  'created' => array(
      'description' => 'The Unix timestamp when the game created.',
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
  ),
  'started' => array(
      'description' => 'The Unix timestamp when the game started.',
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
  ),
  'ended' => array(
      'description' => 'The Unix timestamp when the game ended.',
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
  ),
      ) + entity_exportable_schema_fields(),
      'primary key' => array('id'),
      'unique keys' => array(
          'type' => array('session'),
      ),
      'foreign keys' => array(
          'game' => array(
              'table' => 'game',
              'columns' => array('gid' => 'gid'),
          )
      ),
  );
  $schema['running_game_participant'] = array(
      'description' => 'The base user table to hold all participent of a single instance of a game.',
      'fields' => array(
  'id' => array(
      'type' => 'serial',
      'not null' => TRUE,
      'description' => 'Primary Key: Unique game instance ID.',
  ),
  'running_game_id' => array(
      'description' => 'game id that user is playing.',
      'type' => 'int',
      'not null' => TRUE,
  ),
  'participant_session' => array(
      'description' => 'The uniqe session of each player.',
      'type' => 'varchar',
      'length' => 64,
      'not null' => TRUE,
  ),
  'participant_turn' => array(
      'description' => 'the unique parameter that determine which turn are you in specific instance of the game',
      'type' => 'int',
      'not null' => TRUE,
      'default' => '0',
  ),
  'participant_name' => array(
      'description' => 'The name of the player.',
      'type' => 'varchar',
      'length' => 64,
      'not null' => TRUE,
  ),
  'joined' => array(
      'description' => 'The Unix timestamp when the game was created.',
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
  ),
  'alive' => array(
      'description' => 'The Unix timestamp when the player last ping server.',
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
  ),
      ) + entity_exportable_schema_fields(),
      'primary key' => array('id'),
  );

  $schema['running_game_command'] = array(
      'description' => 'The base user table to hold all commands of a game.',
      'fields' => array(
          'id' => array(
              'type' => 'serial',
              'not null' => TRUE,
              'description' => 'Primary Key: Unique.',
          ),
          'running_game_id' => array(
              'description' => 'game id that user is playing.',
              'type' => 'int',
              'not null' => TRUE,
          ),
          'participant_session' => array(
              'description' => 'The uniqe session of each player.',
              'type' => 'varchar',
              'length' => 64,
              'not null' => TRUE,
          ),
          'command_id' => array(
              'description' => 'The command type that the user had done.',
              'type' => 'int',
              'not null' => TRUE,
              'default' => '0',
          ),
          'command_data' => array(
              'description' => 'Extra data that the command passes to JS.',
              'type' => 'text',
              'not null' => TRUE,
          ),
          'command_time' => array(
              'description' => 'The Unix timestamp when the command was preformed.',
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
          ),
      ),
      //  avoids same action happaning in same millisec in single game
      'primary key' => array('id'),
  );


  return $schema;
}
