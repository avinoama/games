<?php

function games_ui_menu() {
  $items = array();

  // form to add game
  $items['game/add'] = array(
      'title' => 'Add game',
      'page callback' => 'game_ui_admin_add_page',
      'access arguments' => array('administer game entities'),
      'file' => 'games_ui.admin.inc',
      'type' => MENU_LOCAL_ACTION,
      'tab_parent' => 'game',
      'tab_root' => 'game',
  );

  $game_uri = 'game/%game';
  $play_uri = 'play/%running_game';
  $game_uri_argument_position = 1;

  // will show game page
  $items[$play_uri] = array(
      'title' => 'Play',
      'page callback' => 'game_ui_play',
      'page arguments' => array($game_uri_argument_position),
      'access arguments' => array('play game entities'),
      'file' => 'games_ui.pages.inc',
      'theme callback' => 'games_ui_play_template',
  );
  $items[$play_uri . "/ajax"] = array(
      'page callback' => 'game_ui_instance_ajax_callback',
      'page arguments' => array($game_uri_argument_position),
      'access arguments' => array('play game entities'),
      'type' => MENU_CALLBACK,
      'file' => 'games_ui.actions.inc',
  );

  // will show game page
  $items[$game_uri] = array(
      'title callback' => 'entity_label',
      'title arguments' => array('game', $game_uri_argument_position),
      'page callback' => 'game_ui_view',
      'page arguments' => array($game_uri_argument_position),
      'access callback' => 'entity_access',
      'access arguments' => array('view', 'game', $game_uri_argument_position),
      'file' => 'games_ui.pages.inc',
  );
  // will show the view page
  $items[$game_uri . '/view'] = array(
      'title' => 'View',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => -10,
  );

  $items[$game_uri . '/delete'] = array(
      'title' => 'Delete game',
      'title callback' => 'game_label',
      'title arguments' => array($game_uri_argument_position),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('game_delete_form', $game_uri_argument_position),
      'access callback' => 'entity_access',
      'access arguments' => array('edit', 'game', $game_uri_argument_position),
      'file' => 'games_ui.admin.inc',
  );

  $items[$game_uri . '/edit'] = array(
      'title' => 'Edit',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('game_ui_form', $game_uri_argument_position),
      'access callback' => 'entity_access',
      'access arguments' => array('edit', 'game', $game_uri_argument_position),
      'file' => 'games_ui.admin.inc',
      'type' => MENU_LOCAL_TASK,
      'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );
  $items[$game_uri . '/create'] = array(
      'title' => 'Create New',
      'page callback' => 'game_ui_create_instance',
      'page arguments' => array($game_uri_argument_position),
      'access arguments' => array('play game entities'),
      'file' => 'games_ui.admin.inc',
          /* 'type' => MENU_LOCAL_TASK,
            'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE, */
  );
  $items[$game_uri . '/play'] = array(
      'title' => 'Play',
      'page callback' => 'game_ui_list_instances',
      'page arguments' => array($game_uri_argument_position),
      'access arguments' => array('play game entities'),
      'file' => 'games_ui.pages.inc',
      'type' => MENU_LOCAL_TASK,
      'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );
  foreach (game_types() as $type => $info) {
    $items['game/add/' . $type] = array(
        'title' => 'Add game',
        'page callback' => 'game_ui_add',
        'page arguments' => array(2),
        'access callback' => 'entity_access',
        'access arguments' => array('create', 'game', $type),
        'file' => 'games_ui.admin.inc',
    );
  }

  $items['admin/structure/game-types/%game_type/delete'] = array(
      'title' => 'Delete',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('game_ui_type_form_delete_confirm', 4),
      'access arguments' => array('administer game types'),
      'weight' => 1,
      'type' => MENU_NORMAL_ITEM,
      'file' => 'games_ui.admin.inc',
  );

  $items['admin/config/system/games'] = array(
      'title' => 'Game settings',
      'description' => 'Change long pulling interval, player idle time',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('game_ui_setting_form'),
      'access arguments' => array('administer game types'),
      'weight' => 1,
      'type' => MENU_NORMAL_ITEM,
      'file' => 'games_ui.admin.inc',
  );
  return $items;
}

function games_ui_theme() {
  return array(
      'games_ui_play_template' => array(
          'template' => 'game_ui_play',
          'variables' => array('game' => NULL, 'running_game' => NULL, 'status' => NULL, 'num_players' => NULL, 'player_name' => NULL),
      ),
  );
}

function games_ui_views_api() {
  return array(
      'api' => 3,
      'path' => drupal_get_path('module', 'games_ui'),
  );
}

function games_ui_preprocess_page(&$vars) {
  if (arg(0) == 'play') {
    //drupal_add_library('system', 'ui.resizable');

    $path = drupal_get_path('module', 'games_ui');
    $game_connection_type = variable_get('game_connection_type', '1');
    drupal_add_js($path . "/games_instance_".$game_connection_type.".js", 'file');
    drupal_add_css($path . "/games_ui.css", 'file');
  }
}

function startsWith($haystack, $needle) {
  return !strncmp($haystack, $needle, strlen($needle));
}


